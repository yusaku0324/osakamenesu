openapi: 3.1.0
info:
  title: Osaka Men-Esu Platform API
  summary: Draft schema for the PoC search, detail, and reservation flows.
  description: |
    This OpenAPI document captures the initial Men-Esu discovery platform endpoints
    for shop discovery, detail viewing, and reservation workflows. It is a draft that
    will evolve as we validate product assumptions and data modelling.
  version: 0.1.0
servers:
  - url: https://api.osaka-menesu.example
    description: Placeholder production domain
  - url: http://localhost:8000
    description: Local development server
tags:
  - name: Health
    description: Service health probes
  - name: Shops
    description: Customer-facing discovery endpoints for shops and availability
  - name: Reservations
    description: Booking lifecycle endpoints
paths:
  /healthz:
    get:
      tags: [Health]
      summary: Health probe
      operationId: getHealthz
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
  /api/v1/shops:
    get:
      tags: [Shops]
      summary: Search shops
      operationId: searchShops
      description: >-
        Full-text and faceted search across published shops. Supports filtering by
        area, service categories, price range, and real-time availability snapshots.
      parameters:
        - name: q
          in: query
          description: Free-text query applied to shop keywords.
          schema:
            type: string
            minLength: 1
        - name: area
          in: query
          description: Filter by area code (e.g., `umeda`).
          schema:
            type: string
        - name: category
          in: query
          description: Filter by service category slug.
          schema:
            type: string
        - name: service_tags
          in: query
          description: Comma separated list of service tags to require.
          schema:
            type: string
        - name: price_min
          in: query
          description: Minimum course price in JPY.
          schema:
            type: integer
            minimum: 0
        - name: price_max
          in: query
          description: Maximum course price in JPY.
          schema:
            type: integer
            minimum: 0
        - name: available_date
          in: query
          description: ISO date that must have at least one available slot (YYYY-MM-DD).
          schema:
            type: string
            format: date
        - name: open_now
          in: query
          description: Only return shops currently open.
          schema:
            type: boolean
        - name: sort
          in: query
          description: >-
            Sort expression. Examples: `rating:desc`, `price_min:asc`, `popularity:desc`.
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: page_size
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 12
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopSearchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /api/v1/shops/{shopId}:
    get:
      tags: [Shops]
      summary: Fetch shop detail
      operationId: getShopDetail
      parameters:
        - name: shopId
          in: path
          required: true
          description: Shop identifier.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Shop detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopDetail'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/v1/shops/{shopId}/availability:
    get:
      tags: [Shops]
      summary: Get availability calendar for a shop
      operationId: getShopAvailability
      parameters:
        - name: shopId
          in: path
          required: true
          description: Shop identifier.
          schema:
            type: string
            format: uuid
        - name: date_from
          in: query
          description: Inclusive start date for the calendar window (YYYY-MM-DD).
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          description: Inclusive end date for the calendar window (max 14 days from `date_from`).
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Availability window for the shop
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityCalendar'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/v1/reservations:
    post:
      tags: [Reservations]
      summary: Create reservation request
      operationId: createReservation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationCreateRequest'
      responses:
        '201':
          description: Reservation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: Conflicting reservation slot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
  /api/v1/reservations/{reservationId}:
    get:
      tags: [Reservations]
      summary: Get reservation by ID
      operationId: getReservation
      parameters:
        - name: reservationId
          in: path
          required: true
          description: Reservation identifier.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Reservation details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags: [Reservations]
      summary: Update reservation status or assignment
      operationId: updateReservation
      parameters:
        - name: reservationId
          in: path
          required: true
          description: Reservation identifier.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationUpdateRequest'
      responses:
        '200':
          description: Updated reservation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    HealthCheck:
      type: object
      required:
        - ok
      properties:
        ok:
          type: boolean
          description: Indicates the API is reachable.
        version:
          type: string
          description: Application version string.
        timestamp:
          type: string
          format: date-time
          description: Server timestamp of the health response.
    Problem:
      type: object
      description: RFC 9457 style problem details for error responses.
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
        errors:
          type: array
          items:
            type: object
            additionalProperties: true
    ShopSearchResponse:
      type: object
      required:
        - page
        - page_size
        - total
        - results
      properties:
        page:
          type: integer
          minimum: 1
        page_size:
          type: integer
          minimum: 1
        total:
          type: integer
          minimum: 0
        results:
          type: array
          items:
            $ref: '#/components/schemas/ShopSummary'
        facets:
          type: object
          description: Facet buckets keyed by facet name.
          additionalProperties:
            $ref: '#/components/schemas/FacetBucket'
    FacetBucket:
      type: array
      items:
        $ref: '#/components/schemas/FacetValue'
    FacetValue:
      type: object
      required:
        - value
        - count
      properties:
        value:
          type: string
        label:
          type: string
        count:
          type: integer
          minimum: 0
        selected:
          type: boolean
    ShopSummary:
      type: object
      required:
        - id
        - name
        - area
        - min_price
        - max_price
      properties:
        id:
          type: string
          format: uuid
        slug:
          type: string
        name:
          type: string
        area:
          type: string
        area_name:
          type: string
        address:
          type: string
        categories:
          type: array
          items:
            type: string
        service_tags:
          type: array
          items:
            type: string
        min_price:
          type: integer
          minimum: 0
        max_price:
          type: integer
          minimum: 0
        rating:
          type: number
          format: float
          minimum: 0
        review_count:
          type: integer
          minimum: 0
        lead_image_url:
          type: string
          format: uri
        badges:
          type: array
          items:
            type: string
        today_available:
          type: boolean
        next_available_at:
          type: string
          format: date-time
        distance_km:
          type: number
          format: float
        online_reservation:
          type: boolean
        updated_at:
          type: string
          format: date-time
    ShopDetail:
      allOf:
        - $ref: '#/components/schemas/ShopSummary'
        - type: object
          required:
            - description
            - contact
            - menus
          properties:
            description:
              type: string
            catch_copy:
              type: string
            photos:
              type: array
              items:
                $ref: '#/components/schemas/MediaImage'
            contact:
              $ref: '#/components/schemas/ContactInfo'
            location:
              $ref: '#/components/schemas/GeoLocation'
            menus:
              type: array
              items:
                $ref: '#/components/schemas/MenuItem'
            staff:
              type: array
              items:
                $ref: '#/components/schemas/StaffSummary'
            availability_calendar:
              $ref: '#/components/schemas/AvailabilityCalendar'
            reviews:
              $ref: '#/components/schemas/ReviewSummary'
            metadata:
              type: object
              additionalProperties: true
    MediaImage:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          format: uri
        kind:
          type: string
          enum: [exterior, interior, staff, coupon, other]
        caption:
          type: string
        order:
          type: integer
    ContactInfo:
      type: object
      properties:
        phone:
          type: string
        line_id:
          type: string
        website_url:
          type: string
          format: uri
        reservation_form_url:
          type: string
          format: uri
        sns:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
    SocialLink:
      type: object
      required:
        - platform
        - url
      properties:
        platform:
          type: string
        url:
          type: string
          format: uri
        label:
          type: string
    GeoLocation:
      type: object
      properties:
        address:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        nearest_station:
          type: string
    MenuItem:
      type: object
      required:
        - id
        - name
        - price
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        duration_minutes:
          type: integer
          minimum: 0
        price:
          type: integer
          minimum: 0
        currency:
          type: string
          default: JPY
        is_reservable_online:
          type: boolean
          default: true
        tags:
          type: array
          items:
            type: string
    StaffSummary:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        alias:
          type: string
        avatar_url:
          type: string
          format: uri
        headline:
          type: string
        rating:
          type: number
          format: float
        review_count:
          type: integer
        next_shift:
          $ref: '#/components/schemas/StaffShift'
        specialties:
          type: array
          items:
            type: string
        is_pickup:
          type: boolean
    StaffShift:
      type: object
      required:
        - date
      properties:
        date:
          type: string
          format: date
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        status:
          type: string
          enum: [available, limited, unavailable]
    AvailabilityCalendar:
      type: object
      required:
        - shop_id
        - days
      properties:
        shop_id:
          type: string
          format: uuid
        generated_at:
          type: string
          format: date-time
        days:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityDay'
    AvailabilityDay:
      type: object
      required:
        - date
        - slots
      properties:
        date:
          type: string
          format: date
        is_today:
          type: boolean
        slots:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilitySlot'
    AvailabilitySlot:
      type: object
      required:
        - start_at
        - end_at
        - status
      properties:
        start_at:
          type: string
          format: date-time
        end_at:
          type: string
          format: date-time
        status:
          type: string
          enum: [open, tentative, blocked]
        staff_id:
          type: string
          format: uuid
        menu_id:
          type: string
          format: uuid
    ReviewSummary:
      type: object
      properties:
        average_score:
          type: number
          format: float
        review_count:
          type: integer
        highlighted:
          type: array
          items:
            $ref: '#/components/schemas/HighlightedReview'
    HighlightedReview:
      type: object
      required:
        - title
        - score
        - body
      properties:
        review_id:
          type: string
          format: uuid
        title:
          type: string
        body:
          type: string
        score:
          type: integer
          minimum: 1
          maximum: 5
        visited_at:
          type: string
          format: date
        author_alias:
          type: string
    ReservationCreateRequest:
      type: object
      required:
        - shop_id
        - desired_start
        - desired_end
        - menu_id
        - customer
      properties:
        shop_id:
          type: string
          format: uuid
        staff_id:
          type: string
          format: uuid
        menu_id:
          type: string
          format: uuid
        channel:
          type: string
          description: Reservation source (e.g., web, phone, line).
        desired_start:
          type: string
          format: date-time
        desired_end:
          type: string
          format: date-time
        notes:
          type: string
        customer:
          $ref: '#/components/schemas/ReservationCustomerInput'
        marketing_opt_in:
          type: boolean
    ReservationCustomerInput:
      type: object
      required:
        - name
        - phone
      properties:
        name:
          type: string
        phone:
          type: string
        email:
          type: string
          format: email
        line_id:
          type: string
        remark:
          type: string
    Reservation:
      type: object
      required:
        - id
        - status
        - shop_id
        - menu_id
        - desired_start
        - desired_end
        - customer
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        status:
          $ref: '#/components/schemas/ReservationStatus'
        shop_id:
          type: string
          format: uuid
        staff_id:
          type: string
          format: uuid
        menu_id:
          type: string
          format: uuid
        channel:
          type: string
        desired_start:
          type: string
          format: date-time
        desired_end:
          type: string
          format: date-time
        notes:
          type: string
        customer:
          $ref: '#/components/schemas/ReservationCustomer'
        status_history:
          type: array
          items:
            $ref: '#/components/schemas/ReservationStatusEvent'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ReservationCustomer:
      allOf:
        - $ref: '#/components/schemas/ReservationCustomerInput'
        - type: object
          properties:
            id:
              type: string
              format: uuid
    ReservationStatus:
      type: string
      enum: [pending, confirmed, declined, cancelled, expired]
    ReservationStatusEvent:
      type: object
      required:
        - status
        - changed_at
      properties:
        status:
          $ref: '#/components/schemas/ReservationStatus'
        changed_at:
          type: string
          format: date-time
        changed_by:
          type: string
          description: Identifier of the admin or system actor making the change.
        note:
          type: string
    ReservationUpdateRequest:
      type: object
      description: >-
        Updates the reservation status or assigns staff. At least one field must be provided.
      properties:
        status:
          $ref: '#/components/schemas/ReservationStatus'
        staff_id:
          type: string
          format: uuid
        notes:
          type: string
        response_message:
          type: string
        keep_customer_contacted:
          type: boolean
  responses:
    BadRequest:
      description: Invalid input was supplied.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Problem'
    NotFound:
      description: Resource not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Problem'
